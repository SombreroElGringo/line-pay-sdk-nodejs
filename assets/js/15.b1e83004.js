(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{167:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"reserve-payment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reserve-payment","aria-hidden":"true"}},[t._v("#")]),t._v(" Reserve Payment")]),t._v(" "),a("p",[t._v('Prior to processing payments with LINE Pay, the Merchant is evaluated if it is a normal Merchant store then\nthe information is reserved for payment. When a payment is successfully reserved, the Merchant gets a "transaction Id"\nthat is a key value used until the payment is completed or refunded.')]),t._v(" "),a("h2",{attrs:{id:"type-signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-signature","aria-hidden":"true"}},[t._v("#")]),t._v(" Type signature")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Client")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("reservePayment")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OptionsReservePayment"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Promise"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token builtin"}},[t._v("any")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The type of OptionsReservePayment :")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" OptionsReservePayment "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Product Name (charset: UTF-8)\n   * (4000 Bytes)\n   */")]),t._v("\n  productName"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Product image URL\n   * Image URL to be displayed on the Payment screen\n   * Size: 84 x 84 (Image to be displayed only on the Payment screen. Recommended to follow the guidelines)\n   * (500 Bytes)\n   */")]),t._v("\n  productImageUrl"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Payment amount\n   */")]),t._v("\n  amount"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("number")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Currency following ([ISO 4218](https://ko.wikipedia.org/wiki/ISO_4217))\n   * Supported currencies are as follows:\n   *\n   * - USD\n   * - JPY\n   * - TWD\n   * - THB\n   *\n   * (3 Bytes)\n   */")]),t._v("\n  currency"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"USD"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"JPY"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"TWD"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"THB"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * LINE member ID\n   * LINE user mid for making a payment\n   * (50 Bytes)\n   */")]),t._v("\n  mid"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * One Time Key\n   * Result of scanning and reading QR/Bar code information given\n   * by LINE Pay app is used as a LINE Pay user’s mid.\n   * Valid time is 5 minutes and it will be deleted with reserve at the same time.\n   * Supports QR/BarCode above LINE 5.1 Version of LINE Pay app\n   * (12 Bytes)\n   */")]),t._v("\n  oneTimeKey"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v('/**\n   * Merchant\'s URL that the buyer is redirected to after selecting\n   * a payment method and entering the payment password in LINE Pay.\n   *\n   * - On the redirected URL, Merchant can call Confirm Payment API and complete the payment\n   * - LINE Pay passes an additional parameter, "transactionId".\n   *\n   * (500 Bytes)\n   */')]),t._v("\n  confirmUrl"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * confirmUrl Type\n   * Type of URL that the buyer is redirected to after selecting\n   * a payment method and entering the payment password in LINE Pay\n   *\n   * - CLIENT: A user based URL (default)\n   * - SERVER: A server based URL. Users just need to check the payment information\n   *   screen in LINE Pay which then notifies the Merchant server that the payment is available.\n   */")]),t._v("\n  confirmUrlType"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"CLIENT"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"SERVER"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * When moved to confirmUrl, Check a browser\n   *\n   * - true: When a browser calling a payment and a browser directing to confirmUrl are not identical,\n   *   LINE Pay provides a Guide Page directing to a previous browse.\n   * - false(Default Value): Directing to ConfirmUrl without checking a browser\n   */")]),t._v("\n  checkConfirmUrlBrowser"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Payment Cancellation page URL\n   * - The URL redirected to, from the LINE App Payment page when the LINE Pay user cancels payment\n   *   (URL for the Merchant accessing via mobile devices to go to the Merchant's app or website when the payment is canceled)\n   * - URL sent by Merchant is used as is\n   * - No additional parameters sent by LINE Pay\n   *\n   * (500 Bytes)\n   */")]),t._v("\n  cancelUrl"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Information to avoid phishing during transition between apps in Android.\n   * (4000 Bytes)\n   */")]),t._v("\n  packageName"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Merchant's order number corresponding to the payment request\n   *\n   * - A unique number managed by a Merchant\n   *\n   * (100 Bytes)\n   */")]),t._v("\n  orderId"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Recipient contact (for Risk Management)\n   * (100 Bytes)\n   */")]),t._v("\n  deliveryPlacePhone"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Payment types\n   *\n   * - NORMAL: Single payment (Default Value)\n   * - PREAPPROVED: Preapproved payment\n   *\n   * (12 Bytes)\n   */")]),t._v("\n  payType"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"NORMAL"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"PREAPPROVED"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v('/**\n   * Language codes on the payment waiting screen (paymentUrl). Supports a total of six languages.\n   *\n   * - ja: Japanese\n   * - ko: Korean\n   * - en: English\n   * - zh-Hans: Chinese (Simplified)\n   * - zh-Hant: Chinese (Traditional)\n   * - th: Thai\n   *\n   * - Language codes are not mandatory but if not received,\n   *   multiple languages are supported based on the accept-language header.\n   * - If an unsupported langCd is received, English ("en") is used by default.\n   * - BCP-47 format: http://en.wikipedia.org/wiki/IETF_language _tag\n   */')]),t._v("\n  langCd"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v('/**\n   * Whether to capture or not\n   * - true: Payment authorization and capture are handled at once when the Confirm Payment API is called (default).\n   * - false: A payment is completed only after it is authorized and then separately captured by calling "Capture API",\n   *   when the Confirm Payment API is called\n   */')]),t._v("\n  capture"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Extra fields\n   */")]),t._v("\n  extras"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Extras"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Extras "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Add Friends List\n   */")]),t._v("\n  addFriends"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Friend"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Branch Name where the payment is requested from (Only 100 letters will be displayed if it's exceeded.)\n   * (200 Bytes)\n   */")]),t._v("\n  branchName"),a("span",{attrs:{class:"token operator"}},[t._v("?")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Friend "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * type: Service type\n   * - “LINE_AT”: line@\n   */")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * idList: id list(ID List (ID list registered at the LINE@/OA Management menu on Merchant Center))\n   */")]),t._v("\n  idList"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("client"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("reservePayment")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"result-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#result-code","aria-hidden":"true"}},[t._v("#")]),t._v(" Result Code")]),t._v(" "),a("ul",[a("li",[t._v("0000: Successful")]),t._v(" "),a("li",[t._v("1104: Merchant not found.")]),t._v(" "),a("li",[t._v("1105: This Merchant cannot use LINE Pay.")]),t._v(" "),a("li",[t._v("1106: Header information error")]),t._v(" "),a("li",[t._v("1124: Error in amount (scale).")]),t._v(" "),a("li",[t._v("1133: Invalid oneTimeKey.")]),t._v(" "),a("li",[t._v("1145: Payment in progress.")]),t._v(" "),a("li",[t._v("1172: Existing same orderId")]),t._v(" "),a("li",[t._v("1178: Unsupported currency")]),t._v(" "),a("li",[t._v("1194: This Merchant cannot use preapproved payment.")]),t._v(" "),a("li",[t._v("2101: Parameter error")]),t._v(" "),a("li",[t._v("2102: JSON Data format error")]),t._v(" "),a("li",[t._v("9000: Internal error")])])])}],!1,null,null,null);e.options.__file="reserve-payment.md";n.default=e.exports}}]);